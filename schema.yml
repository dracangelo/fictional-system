openapi: 3.0.3
info:
  title: Movie & Event Booking API
  version: 1.0.0
  description: "\n    A comprehensive platform for booking movies and events with\
    \ multi-tenant support.\n    \n    ## Features\n    - **Multi-role Authentication**:\
    \ Admin, Event Owner, Theater Owner, Customer roles\n    - **Event Management**:\
    \ Create and manage events with ticketing and discounts\n    - **Theater Management**:\
    \ Manage theaters, movies, and showtimes\n    - **Booking System**: Real-time\
    \ seat selection and booking with payment processing\n    - **Notifications**:\
    \ Email and SMS notifications for bookings and updates\n    - **Analytics**: Comprehensive\
    \ reporting and analytics for business insights\n    \n    ## Authentication\n\
    \    This API uses JWT (JSON Web Token) authentication. Include the token in the\
    \ Authorization header:\n    ```\n    Authorization: Bearer <your-jwt-token>\n\
    \    ```\n    \n    ## Rate Limiting\n    - Authenticated users: 100 requests/minute\n\
    \    - Anonymous users: 20 requests/minute\n    - Login attempts: 5 requests/minute\n\
    \    - Booking operations: 20 requests/minute\n    \n    ## Versioning\n    Current\
    \ API version: v1\n    Future versions will be available at `/api/v2/`, `/api/v3/`,\
    \ etc.\n    "
paths:
  /versions/:
    get:
      operationId: versions_retrieve
      description: Returns information about all available API versions, their status,
        and features.
      summary: Get API version information
      tags:
      - API Information
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: API version information
                example:
                  current_version: v1
                  supported_versions:
                  - v1
                  latest_version: v1
                  versions:
                    v1:
                      supported: true
                      deprecated: false
                      features:
                      - Basic authentication
                      - Event booking
          description: ''
  /version-info/{version}/:
    get:
      operationId: version_info_retrieve
      description: Returns detailed information about a specific API version.
      summary: Get specific version information
      parameters:
      - in: path
        name: version
        schema:
          type: string
        required: true
      tags:
      - API Information
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Version information
                example:
                  version: v1
                  supported: true
                  deprecated: false
                  features:
                  - Basic authentication
                  - Event booking
                  documentation_url: /api/docs/
                  migration_guide: null
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Version not found
  /v1/auth/register/:
    post:
      operationId: v1_auth_register_create
      description: User registration endpoint
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      description: User login endpoint
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      description: User logout endpoint
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/token/refresh/:
    post:
      operationId: v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /v1/auth/token/verify/:
    post:
      operationId: v1_auth_token_verify_create
      description: Verify JWT token validity
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/profile/:
    get:
      operationId: v1_auth_profile_retrieve
      description: Get current user profile
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: v1_auth_profile_update
      description: Update current user profile
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/password/change/:
    post:
      operationId: v1_auth_password_change_create
      description: Password change endpoint
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/list/:
    get:
      operationId: v1_auth_list_list
      description: List all users (admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
              examples:
                CompleteUserInformation:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 1
                      username: john_doe
                      email: john@example.com
                      first_name: John
                      last_name: Doe
                      date_joined: '2024-01-15T10:30:00Z'
                      profile:
                        role: customer
                        phone_number: '+1234567890'
                        preferences:
                          notification_settings:
                            email: true
                            sms: true
                          favorite_genres:
                          - action
                          - comedy
                        is_verified: true
                  summary: User with profile data
                  description: Complete user information including profile and preferences
          description: ''
  /v1/auth/permissions/:
    get:
      operationId: v1_auth_permissions_retrieve
      description: Get current user's permissions
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/analytics/:
    get:
      operationId: v1_auth_admin_analytics_retrieve
      description: Get comprehensive system analytics
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/dashboard/summary/:
    get:
      operationId: v1_auth_admin_dashboard_summary_retrieve
      description: Get admin dashboard summary with key metrics
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/users/:
    get:
      operationId: v1_auth_admin_users_retrieve
      description: Get paginated list of users with filters
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_auth_admin_users_partial_update
      description: Update user status or role
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/users/{user_id}/:
    get:
      operationId: v1_auth_admin_users_retrieve_2
      description: Get paginated list of users with filters
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_auth_admin_users_partial_update_2
      description: Update user status or role
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/users/{user_id}/activity/:
    get:
      operationId: v1_auth_admin_users_activity_retrieve
      description: Get user activity history
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/audit-logs/:
    get:
      operationId: v1_auth_admin_audit_logs_retrieve
      description: Get audit logs with filtering
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/moderation/:
    get:
      operationId: v1_auth_admin_moderation_retrieve
      description: Get content moderation queue
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_auth_admin_moderation_partial_update
      description: Moderate content item
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/moderation/{item_id}/:
    get:
      operationId: v1_auth_admin_moderation_retrieve_2
      description: Get content moderation queue
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: v1_auth_admin_moderation_partial_update_2
      description: Moderate content item
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/auth/admin/health/:
    get:
      operationId: v1_auth_admin_health_retrieve
      description: Get system health status
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: v1_auth_admin_health_create
      description: Trigger system health metrics collection
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/events/:
    post:
      operationId: v1_events_create
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    get:
      operationId: v1_events_list
      description: Override list method with caching
      parameters:
      - in: query
        name: category
        schema:
          type: string
          x-spec-enum-id: af6ada5c80318cac
          enum:
          - comedy
          - concert
          - conference
          - festival
          - other
          - sports
          - theater
          - workshop
        description: |-
          Event category

          * `concert` - Concert
          * `theater` - Theater
          * `sports` - Sports
          * `conference` - Conference
          * `workshop` - Workshop
          * `festival` - Festival
          * `comedy` - Comedy
          * `other` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          enum:
          - cancelled
          - completed
          - draft
          - published
        description: |-
          Event status

          * `draft` - Draft
          * `published` - Published
          * `cancelled` - Cancelled
          * `completed` - Completed
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
  /v1/events/{id}/:
    delete:
      operationId: v1_events_destroy
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_events_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    patch:
      operationId: v1_events_partial_update
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    put:
      operationId: v1_events_update
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
  /v1/events/{id}/analytics/:
    get:
      operationId: v1_events_analytics_retrieve
      description: Get analytics data for a specific event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/calculate_price/:
    post:
      operationId: v1_events_calculate_price_create
      description: Calculate booking price with discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/discount_analytics/:
    get:
      operationId: v1_events_discount_analytics_retrieve
      description: Get discount analytics for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/discounts/:
    post:
      operationId: v1_events_discounts_create
      description: Manage discounts for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    get:
      operationId: v1_events_discounts_retrieve
      description: Manage discounts for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/ticket_types/:
    post:
      operationId: v1_events_ticket_types_create
      description: Manage ticket types for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    get:
      operationId: v1_events_ticket_types_retrieve
      description: Manage ticket types for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/update_status/:
    patch:
      operationId: v1_events_update_status_partial_update
      description: Update event status with validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/upload_media/:
    post:
      operationId: v1_events_upload_media_create
      description: Secure media upload for events
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/events/{id}/validate_promo_code/:
    post:
      operationId: v1_events_validate_promo_code_create
      description: Validate a promo code for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /v1/ticket-types/:
    post:
      operationId: v1_ticket_types_create
      description: ViewSet for managing ticket types within event context
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    get:
      operationId: v1_ticket_types_list
      description: ViewSet for managing ticket types within event context
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketTypeList'
          description: ''
  /v1/ticket-types/{id}/:
    delete:
      operationId: v1_ticket_types_destroy
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_ticket_types_retrieve
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    patch:
      operationId: v1_ticket_types_partial_update
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    put:
      operationId: v1_ticket_types_update
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
  /v1/discounts/:
    post:
      operationId: v1_discounts_create
      description: ViewSet for managing discounts within event context
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    get:
      operationId: v1_discounts_list
      description: ViewSet for managing discounts within event context
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
  /v1/discounts/{id}/:
    delete:
      operationId: v1_discounts_destroy
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_discounts_retrieve
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: v1_discounts_partial_update
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: v1_discounts_update
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /v1/search/events/:
    get:
      operationId: v1_search_events_retrieve
      description: |-
        Advanced event search with filtering

        Query Parameters:
        - q: Search query
        - location: Location filter
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
        - min_price: Minimum price
        - max_price: Maximum price
        - categories: Comma-separated list of categories
        - min_rating: Minimum rating
        - available_only: true/false
        - sort_by: relevance, date, price_low, price_high, popularity, rating
        - page: Page number
        - page_size: Results per page
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/search/movies/:
    get:
      operationId: v1_search_movies_retrieve
      description: |-
        Advanced movie search with filtering

        Query Parameters:
        - q: Search query
        - location: Location filter (theater location)
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
        - min_price: Minimum price
        - max_price: Maximum price
        - genres: Comma-separated list of genres
        - ratings: Comma-separated list of ratings (G, PG, R, etc.)
        - min_rating: Minimum user rating
        - available_only: true/false
        - sort_by: relevance, date, price_low, price_high, popularity, rating
        - page: Page number
        - page_size: Results per page
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/search/popular/:
    get:
      operationId: v1_search_popular_retrieve
      description: Get popular search terms and categories
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/search/nearby/:
    get:
      operationId: v1_search_nearby_retrieve
      description: |-
        Search for nearby events and theaters

        Query Parameters:
        - lat: Latitude
        - lon: Longitude
        - radius: Search radius in kilometers (default: 50)
        - type: 'events', 'theaters', or 'both' (default: 'both')
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/recommendations/:
    get:
      operationId: v1_recommendations_retrieve
      description: Get personalized recommendations for the user
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/similar/{content_type}/{content_id}/:
    get:
      operationId: v1_similar_retrieve
      description: |-
        Get similar events or movies

        URL Parameters:
        - content_type: 'events' or 'movies'
        - content_id: The event or movie ID

        Query Parameters:
        - limit: Number of results (default: 5, max: 20)
      parameters:
      - in: path
        name: content_id
        schema:
          type: integer
        required: true
      - in: path
        name: content_type
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/categories/:
    get:
      operationId: v1_categories_retrieve
      description: Get all categories with counts for browsing
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/browse/{category_type}/{category_name}/:
    get:
      operationId: v1_browse_retrieve
      description: |-
        Browse events or movies by category

        URL Parameters:
        - category_type: 'events' or 'movies'
        - category_name: The category/genre name

        Query Parameters:
        - limit: Number of results (default: 20, max: 100)
      parameters:
      - in: path
        name: category_name
        schema:
          type: string
        required: true
      - in: path
        name: category_type
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/featured/:
    get:
      operationId: v1_featured_retrieve
      description: Get featured events and movies for homepage
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/theaters/:
    post:
      operationId: v1_theaters_create
      description: ViewSet for managing theaters with seating layout management
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
    get:
      operationId: v1_theaters_list
      description: Override list method with caching
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: screens
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTheaterListList'
          description: ''
  /v1/theaters/{id}/:
    delete:
      operationId: v1_theaters_destroy
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_theaters_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
    patch:
      operationId: v1_theaters_partial_update
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
    put:
      operationId: v1_theaters_update
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
  /v1/theaters/{id}/analytics/:
    get:
      operationId: v1_theaters_analytics_retrieve
      description: Get analytics data for a specific theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /v1/theaters/{id}/seating_layout/:
    get:
      operationId: v1_theaters_seating_layout_retrieve
      description: Manage seating layout for a theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
    put:
      operationId: v1_theaters_seating_layout_update
      description: Manage seating layout for a theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /v1/theaters/{id}/showtimes/:
    get:
      operationId: v1_theaters_showtimes_retrieve
      description: Get showtimes for a specific theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /v1/movies/:
    post:
      operationId: v1_movies_create
      description: ViewSet for managing movies with CRUD operations
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    get:
      operationId: v1_movies_list
      description: Override list method with caching
      parameters:
      - in: query
        name: genre
        schema:
          type: string
          x-spec-enum-id: 77970e268766ca90
          enum:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - horror
          - musical
          - mystery
          - romance
          - sci-fi
          - thriller
          - war
          - western
        description: |-
          Primary movie genre

          * `action` - Action
          * `adventure` - Adventure
          * `animation` - Animation
          * `comedy` - Comedy
          * `crime` - Crime
          * `documentary` - Documentary
          * `drama` - Drama
          * `family` - Family
          * `fantasy` - Fantasy
          * `horror` - Horror
          * `musical` - Musical
          * `mystery` - Mystery
          * `romance` - Romance
          * `sci-fi` - Science Fiction
          * `thriller` - Thriller
          * `war` - War
          * `western` - Western
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: language
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: rating
        schema:
          type: string
          x-spec-enum-id: 2152a8bdedfe5ef6
          enum:
          - G
          - NC-17
          - NR
          - PG
          - PG-13
          - R
        description: |-
          Movie rating

          * `G` - General Audiences
          * `PG` - Parental Guidance
          * `PG-13` - Parents Strongly Cautioned
          * `R` - Restricted
          * `NC-17` - Adults Only
          * `NR` - Not Rated
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMovieList'
          description: ''
  /v1/movies/{id}/:
    delete:
      operationId: v1_movies_destroy
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_movies_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    patch:
      operationId: v1_movies_partial_update
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    put:
      operationId: v1_movies_update
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
  /v1/movies/{id}/showtimes/:
    get:
      operationId: v1_movies_showtimes_retrieve
      description: Get showtimes for a specific movie
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
  /v1/showtimes/:
    post:
      operationId: v1_showtimes_create
      description: ViewSet for managing showtimes with conflict detection and validation
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
    get:
      operationId: v1_showtimes_list
      description: Override list method with caching
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: movie
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: screen_number
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: theater
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShowtimeListList'
          description: ''
  /v1/showtimes/{id}/:
    delete:
      operationId: v1_showtimes_destroy
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_showtimes_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
    patch:
      operationId: v1_showtimes_partial_update
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
    put:
      operationId: v1_showtimes_update
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
  /v1/showtimes/{id}/availability/:
    get:
      operationId: v1_showtimes_availability_retrieve
      description: Get seat availability for a showtime
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
  /v1/showtimes/{id}/pricing/:
    post:
      operationId: v1_showtimes_pricing_create
      description: Manage dynamic pricing for different time slots and seat categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
    get:
      operationId: v1_showtimes_pricing_retrieve
      description: Manage dynamic pricing for different time slots and seat categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
  /v1/customer-bookings/:
    get:
      operationId: v1_customer_bookings_list
      description: Override list method with caching
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingListList'
          description: ''
  /v1/customer-bookings/analytics/:
    get:
      operationId: v1_customer_bookings_analytics_retrieve
      description: Get customer booking analytics
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /v1/customer-bookings/{id}/:
    get:
      operationId: v1_customer_bookings_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /v1/customer-bookings/{id}/cancel/:
    post:
      operationId: v1_customer_bookings_cancel_create
      description: Cancel a booking with optional refund
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /v1/customer-bookings/{id}/tickets/:
    get:
      operationId: v1_customer_bookings_tickets_retrieve
      description: Get tickets for a specific booking
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /v1/reviews/:
    post:
      operationId: v1_reviews_create
      description: ViewSet for customer reviews
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    get:
      operationId: v1_reviews_list
      description: ViewSet for customer reviews
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerReviewList'
          description: ''
  /v1/reviews/{id}/:
    delete:
      operationId: v1_reviews_destroy
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_reviews_retrieve
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    patch:
      operationId: v1_reviews_partial_update
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    put:
      operationId: v1_reviews_update
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
  /v1/waitlist/:
    post:
      operationId: v1_waitlist_create
      description: ViewSet for waitlist management
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    get:
      operationId: v1_waitlist_list
      description: ViewSet for waitlist management
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWaitlistEntryList'
          description: ''
  /v1/waitlist/join_event_waitlist/:
    post:
      operationId: v1_waitlist_join_event_waitlist_create
      description: Join waitlist for a sold-out event
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /v1/waitlist/join_showtime_waitlist/:
    post:
      operationId: v1_waitlist_join_showtime_waitlist_create
      description: Join waitlist for a sold-out showtime
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /v1/waitlist/{id}/:
    delete:
      operationId: v1_waitlist_destroy
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: v1_waitlist_retrieve
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    patch:
      operationId: v1_waitlist_partial_update
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    put:
      operationId: v1_waitlist_update
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /v1/tickets/validate/:
    post:
      operationId: v1_tickets_validate_create
      description: |-
        Validate a ticket for entry

        POST /api/tickets/validate/
        {
            "ticket_identifier": "TKT-20241011-ABC12345" or QR code data,
            "scanner_id": "Scanner1"
        }
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/tickets/info/{ticket_identifier}/:
    get:
      operationId: v1_tickets_info_retrieve
      description: |-
        Get ticket information without validating/using it

        GET /api/tickets/info/{ticket_identifier}/
      parameters:
      - in: path
        name: ticket_identifier
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/tickets/{ticket_id}/status/:
    post:
      operationId: v1_tickets_status_create
      description: |-
        Change ticket status

        POST /api/tickets/{ticket_id}/status/
        {
            "new_status": "cancelled",
            "reason": "Customer request",
            "changed_by": "Admin"
        }
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/tickets/{ticket_id}/pdf/:
    get:
      operationId: v1_tickets_pdf_retrieve
      description: |-
        Download PDF for a specific ticket

        GET /api/tickets/{ticket_id}/pdf/
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/tickets/bulk-expire/:
    post:
      operationId: v1_tickets_bulk_expire_create
      description: |-
        Bulk expire old tickets (admin only)

        POST /api/tickets/bulk-expire/
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/tickets/pdf/:
    get:
      operationId: v1_bookings_tickets_pdf_retrieve
      description: |-
        Download PDF for all tickets in a booking

        GET /api/bookings/{booking_id}/tickets/pdf/
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/cancel-tickets/:
    post:
      operationId: v1_bookings_cancel_tickets_create
      description: |-
        Cancel all tickets in a booking

        POST /api/bookings/{booking_id}/cancel-tickets/
        {
            "reason": "Customer cancellation"
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/payment/intent/:
    post:
      operationId: v1_bookings_payment_intent_create
      description: |-
        Create a Stripe PaymentIntent for a booking

        POST /api/bookings/{booking_id}/payment/intent/

        Request body:
        {
            "payment_method_id": "pm_1234567890",  // Optional
            "confirm_immediately": false           // Optional
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/payment/confirm/:
    post:
      operationId: v1_bookings_payment_confirm_create
      description: |-
        Confirm a PaymentIntent for a booking

        POST /api/bookings/{booking_id}/payment/confirm/

        Request body:
        {
            "payment_method_id": "pm_1234567890"  // Optional
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/payment/status/:
    get:
      operationId: v1_bookings_payment_status_retrieve
      description: |-
        Get payment status for a booking

        GET /api/bookings/{booking_id}/payment/status/
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/payment/refund/:
    post:
      operationId: v1_bookings_payment_refund_create
      description: |-
        Request a refund for a booking

        POST /api/bookings/{booking_id}/payment/refund/

        Request body:
        {
            "amount": "50.00",                    // Optional partial refund amount
            "reason": "requested_by_customer"     // Optional reason
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/bookings/{booking_id}/payment/retry/:
    post:
      operationId: v1_bookings_payment_retry_create
      description: |-
        Retry payment for a failed booking

        POST /api/bookings/{booking_id}/payment/retry/

        Request body:
        {
            "payment_method_id": "pm_1234567890"  // Required
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/payment/config/:
    get:
      operationId: v1_payment_config_retrieve
      description: |-
        Get Stripe configuration for frontend

        GET /api/payment/config/
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/webhooks/stripe/:
    post:
      operationId: v1_webhooks_stripe_create
      description: DRF-based Stripe webhook endpoint
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/webhooks/health/:
    get:
      operationId: v1_webhooks_health_retrieve
      description: Health check endpoint for webhook monitoring
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /v1/history/summary/:
    get:
      operationId: v1_history_summary_retrieve
      description: Get a summary of customer's booking history
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/upcoming/:
    get:
      operationId: v1_upcoming_retrieve
      description: Get customer's upcoming bookings
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/system/:
    get:
      operationId: v1_analytics_system_retrieve
      description: |-
        Get system-wide analytics (admin only)

        Query parameters:
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/events/{event_id}/:
    get:
      operationId: v1_analytics_events_retrieve
      description: |-
        Get analytics for a specific event

        Event owners can only view their own events.
        Admins can view any event.
      parameters:
      - in: path
        name: event_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/theaters/{theater_id}/:
    get:
      operationId: v1_analytics_theaters_retrieve
      description: |-
        Get analytics for a specific theater

        Theater owners can only view their own theaters.
        Admins can view any theater.
      parameters:
      - in: path
        name: theater_id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/trends/{entity_type}/{entity_id}/:
    get:
      operationId: v1_analytics_trends_retrieve
      description: |-
        Get trend analysis for events or theaters

        Query parameters:
        - days: Number of days to analyze (default: 30)
      parameters:
      - in: path
        name: entity_id
        schema:
          type: integer
        required: true
      - in: path
        name: entity_type
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/insights/:
    get:
      operationId: v1_analytics_insights_retrieve
      description: Get recommendation insights based on booking patterns
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/reports/{report_type}/:
    get:
      operationId: v1_analytics_reports_retrieve
      description: |-
        Export analytics report as CSV or PDF

        Query parameters:
        - format: 'csv' or 'pdf' (default: 'csv')
        - date_from: Start date for system reports (YYYY-MM-DD)
        - date_to: End date for system reports (YYYY-MM-DD)
      parameters:
      - in: path
        name: report_type
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/analytics/reports/{report_type}/{entity_id}/:
    get:
      operationId: v1_analytics_reports_retrieve_2
      description: |-
        Export analytics report as CSV or PDF

        Query parameters:
        - format: 'csv' or 'pdf' (default: 'csv')
        - date_from: Start date for system reports (YYYY-MM-DD)
        - date_to: End date for system reports (YYYY-MM-DD)
      parameters:
      - in: path
        name: entity_id
        schema:
          type: integer
        required: true
      - in: path
        name: report_type
        schema:
          type: string
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/notifications/preferences/:
    get:
      operationId: v1_notifications_preferences_retrieve
      description: Get current user's notification preferences
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: v1_notifications_preferences_update
      description: Update user notification preferences
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/notifications/opt-out-all/:
    post:
      operationId: v1_notifications_opt_out_all_create
      description: Opt out of all notifications
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/notifications/opt-in-essential/:
    post:
      operationId: v1_notifications_opt_in_essential_create
      description: Opt in to essential notifications only (booking confirmations)
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/notifications/logs/:
    get:
      operationId: v1_notifications_logs_list
      description: List notification logs for the current user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /v1/notifications/admin/logs/:
    get:
      operationId: v1_notifications_admin_logs_list
      description: List all notification logs (admin only)
      parameters:
      - in: query
        name: channel
        schema:
          type: string
      - in: query
        name: notification_type
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          x-spec-enum-id: 2e86f9036480ef10
          enum:
          - delivered
          - failed
          - pending
          - sent
        description: |-
          * `pending` - Pending
          * `sent` - Sent
          * `failed` - Failed
          * `delivered` - Delivered
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /v1/notifications/templates/:
    get:
      operationId: v1_notifications_templates_list
      description: List notification templates (admin only)
      parameters:
      - in: query
        name: channel
        schema:
          type: string
          x-spec-enum-id: b93ea89afe3c6c28
          enum:
          - email
          - push
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `push` - Push Notification
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          x-spec-enum-id: b5be9a6d4454a2db
          enum:
          - booking_cancellation
          - booking_confirmation
          - booking_reminder
          - event_update
          - payment_failed
          - payment_success
          - system_maintenance
        description: |-
          * `booking_confirmation` - Booking Confirmation
          * `booking_reminder` - Booking Reminder
          * `booking_cancellation` - Booking Cancellation
          * `event_update` - Event Update
          * `system_maintenance` - System Maintenance
          * `payment_success` - Payment Success
          * `payment_failed` - Payment Failed
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTemplateList'
          description: ''
  /v1/notifications/templates/{id}/:
    get:
      operationId: v1_notifications_templates_retrieve
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
    put:
      operationId: v1_notifications_templates_update
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
    patch:
      operationId: v1_notifications_templates_partial_update
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
  /v1/notifications/send-bulk/:
    post:
      operationId: v1_notifications_send_bulk_create
      description: Send bulk notifications (admin only)
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /v1/notifications/test/:
    post:
      operationId: v1_notifications_test_create
      description: Send test notification to current user
      tags:
      - v1
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/register/:
    post:
      operationId: auth_register_create
      description: User registration endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/login/:
    post:
      operationId: auth_login_create
      description: User login endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/logout/:
    post:
      operationId: auth_logout_create
      description: User logout endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: Verify JWT token validity
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/profile/:
    get:
      operationId: auth_profile_retrieve
      description: Get current user profile
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: auth_profile_update
      description: Update current user profile
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: Password change endpoint
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/list/:
    get:
      operationId: auth_list_list
      description: List all users (admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
              examples:
                CompleteUserInformation:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - id: 1
                      username: john_doe
                      email: john@example.com
                      first_name: John
                      last_name: Doe
                      date_joined: '2024-01-15T10:30:00Z'
                      profile:
                        role: customer
                        phone_number: '+1234567890'
                        preferences:
                          notification_settings:
                            email: true
                            sms: true
                          favorite_genres:
                          - action
                          - comedy
                        is_verified: true
                  summary: User with profile data
                  description: Complete user information including profile and preferences
          description: ''
  /auth/permissions/:
    get:
      operationId: auth_permissions_retrieve
      description: Get current user's permissions
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/analytics/:
    get:
      operationId: auth_admin_analytics_retrieve
      description: Get comprehensive system analytics
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/dashboard/summary/:
    get:
      operationId: auth_admin_dashboard_summary_retrieve
      description: Get admin dashboard summary with key metrics
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/users/:
    get:
      operationId: auth_admin_users_retrieve
      description: Get paginated list of users with filters
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: auth_admin_users_partial_update
      description: Update user status or role
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/users/{user_id}/:
    get:
      operationId: auth_admin_users_retrieve_2
      description: Get paginated list of users with filters
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: auth_admin_users_partial_update_2
      description: Update user status or role
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/users/{user_id}/activity/:
    get:
      operationId: auth_admin_users_activity_retrieve
      description: Get user activity history
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/audit-logs/:
    get:
      operationId: auth_admin_audit_logs_retrieve
      description: Get audit logs with filtering
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/moderation/:
    get:
      operationId: auth_admin_moderation_retrieve
      description: Get content moderation queue
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: auth_admin_moderation_partial_update
      description: Moderate content item
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/moderation/{item_id}/:
    get:
      operationId: auth_admin_moderation_retrieve_2
      description: Get content moderation queue
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: auth_admin_moderation_partial_update_2
      description: Moderate content item
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /auth/admin/health/:
    get:
      operationId: auth_admin_health_retrieve
      description: Get system health status
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_admin_health_create
      description: Trigger system health metrics collection
      tags:
      - auth
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /events/:
    post:
      operationId: events_create
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    get:
      operationId: events_list
      description: Override list method with caching
      parameters:
      - in: query
        name: category
        schema:
          type: string
          x-spec-enum-id: af6ada5c80318cac
          enum:
          - comedy
          - concert
          - conference
          - festival
          - other
          - sports
          - theater
          - workshop
        description: |-
          Event category

          * `concert` - Concert
          * `theater` - Theater
          * `sports` - Sports
          * `conference` - Conference
          * `workshop` - Workshop
          * `festival` - Festival
          * `comedy` - Comedy
          * `other` - Other
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          enum:
          - cancelled
          - completed
          - draft
          - published
        description: |-
          Event status

          * `draft` - Draft
          * `published` - Published
          * `cancelled` - Cancelled
          * `completed` - Completed
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventListList'
          description: ''
  /events/{id}/:
    delete:
      operationId: events_destroy
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: events_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    patch:
      operationId: events_partial_update
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
    put:
      operationId: events_update
      description: ViewSet for managing events with CRUD operations and owner-based
        filtering
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateUpdate'
          description: ''
  /events/{id}/analytics/:
    get:
      operationId: events_analytics_retrieve
      description: Get analytics data for a specific event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/calculate_price/:
    post:
      operationId: events_calculate_price_create
      description: Calculate booking price with discounts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/discount_analytics/:
    get:
      operationId: events_discount_analytics_retrieve
      description: Get discount analytics for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/discounts/:
    post:
      operationId: events_discounts_create
      description: Manage discounts for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    get:
      operationId: events_discounts_retrieve
      description: Manage discounts for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/ticket_types/:
    post:
      operationId: events_ticket_types_create
      description: Manage ticket types for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
    get:
      operationId: events_ticket_types_retrieve
      description: Manage ticket types for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/update_status/:
    patch:
      operationId: events_update_status_partial_update
      description: Update event status with validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEventDetailRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/upload_media/:
    post:
      operationId: events_upload_media_create
      description: Secure media upload for events
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /events/{id}/validate_promo_code/:
    post:
      operationId: events_validate_promo_code_create
      description: Validate a promo code for an event
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
          description: ''
  /ticket-types/:
    post:
      operationId: ticket_types_create
      description: ViewSet for managing ticket types within event context
      tags:
      - ticket-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    get:
      operationId: ticket_types_list
      description: ViewSet for managing ticket types within event context
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - ticket-types
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTicketTypeList'
          description: ''
  /ticket-types/{id}/:
    delete:
      operationId: ticket_types_destroy
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - ticket-types
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: ticket_types_retrieve
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - ticket-types
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    patch:
      operationId: ticket_types_partial_update
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - ticket-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicketTypeRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
    put:
      operationId: ticket_types_update
      description: ViewSet for managing ticket types within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Ticket Type.
        required: true
      tags:
      - ticket-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TicketTypeRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketType'
          description: ''
  /discounts/:
    post:
      operationId: discounts_create
      description: ViewSet for managing discounts within event context
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    get:
      operationId: discounts_list
      description: ViewSet for managing discounts within event context
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - discounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
  /discounts/{id}/:
    delete:
      operationId: discounts_destroy
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - discounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: discounts_retrieve
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - discounts
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: discounts_partial_update
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscountRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: discounts_update
      description: ViewSet for managing discounts within event context
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Discount.
        required: true
      tags:
      - discounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /search/events/:
    get:
      operationId: search_events_retrieve
      description: |-
        Advanced event search with filtering

        Query Parameters:
        - q: Search query
        - location: Location filter
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
        - min_price: Minimum price
        - max_price: Maximum price
        - categories: Comma-separated list of categories
        - min_rating: Minimum rating
        - available_only: true/false
        - sort_by: relevance, date, price_low, price_high, popularity, rating
        - page: Page number
        - page_size: Results per page
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /search/movies/:
    get:
      operationId: search_movies_retrieve
      description: |-
        Advanced movie search with filtering

        Query Parameters:
        - q: Search query
        - location: Location filter (theater location)
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
        - min_price: Minimum price
        - max_price: Maximum price
        - genres: Comma-separated list of genres
        - ratings: Comma-separated list of ratings (G, PG, R, etc.)
        - min_rating: Minimum user rating
        - available_only: true/false
        - sort_by: relevance, date, price_low, price_high, popularity, rating
        - page: Page number
        - page_size: Results per page
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /search/popular/:
    get:
      operationId: search_popular_retrieve
      description: Get popular search terms and categories
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /search/nearby/:
    get:
      operationId: search_nearby_retrieve
      description: |-
        Search for nearby events and theaters

        Query Parameters:
        - lat: Latitude
        - lon: Longitude
        - radius: Search radius in kilometers (default: 50)
        - type: 'events', 'theaters', or 'both' (default: 'both')
      tags:
      - search
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /recommendations/:
    get:
      operationId: recommendations_retrieve
      description: Get personalized recommendations for the user
      tags:
      - recommendations
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /similar/{content_type}/{content_id}/:
    get:
      operationId: similar_retrieve
      description: |-
        Get similar events or movies

        URL Parameters:
        - content_type: 'events' or 'movies'
        - content_id: The event or movie ID

        Query Parameters:
        - limit: Number of results (default: 5, max: 20)
      parameters:
      - in: path
        name: content_id
        schema:
          type: integer
        required: true
      - in: path
        name: content_type
        schema:
          type: string
        required: true
      tags:
      - similar
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /categories/:
    get:
      operationId: categories_retrieve
      description: Get all categories with counts for browsing
      tags:
      - categories
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /browse/{category_type}/{category_name}/:
    get:
      operationId: browse_retrieve
      description: |-
        Browse events or movies by category

        URL Parameters:
        - category_type: 'events' or 'movies'
        - category_name: The category/genre name

        Query Parameters:
        - limit: Number of results (default: 20, max: 100)
      parameters:
      - in: path
        name: category_name
        schema:
          type: string
        required: true
      - in: path
        name: category_type
        schema:
          type: string
        required: true
      tags:
      - browse
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /featured/:
    get:
      operationId: featured_retrieve
      description: Get featured events and movies for homepage
      tags:
      - featured
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /theaters/:
    post:
      operationId: theaters_create
      description: ViewSet for managing theaters with seating layout management
      tags:
      - theaters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
    get:
      operationId: theaters_list
      description: Override list method with caching
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: screens
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTheaterListList'
          description: ''
  /theaters/{id}/:
    delete:
      operationId: theaters_destroy
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: theaters_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
    patch:
      operationId: theaters_partial_update
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTheaterCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
    put:
      operationId: theaters_update
      description: ViewSet for managing theaters with seating layout management
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterCreateUpdate'
          description: ''
  /theaters/{id}/analytics/:
    get:
      operationId: theaters_analytics_retrieve
      description: Get analytics data for a specific theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /theaters/{id}/seating_layout/:
    get:
      operationId: theaters_seating_layout_retrieve
      description: Manage seating layout for a theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
    put:
      operationId: theaters_seating_layout_update
      description: Manage seating layout for a theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TheaterDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /theaters/{id}/showtimes/:
    get:
      operationId: theaters_showtimes_retrieve
      description: Get showtimes for a specific theater
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Theater.
        required: true
      tags:
      - theaters
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TheaterDetail'
          description: ''
  /movies/:
    post:
      operationId: movies_create
      description: ViewSet for managing movies with CRUD operations
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    get:
      operationId: movies_list
      description: Override list method with caching
      parameters:
      - in: query
        name: genre
        schema:
          type: string
          x-spec-enum-id: 77970e268766ca90
          enum:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - horror
          - musical
          - mystery
          - romance
          - sci-fi
          - thriller
          - war
          - western
        description: |-
          Primary movie genre

          * `action` - Action
          * `adventure` - Adventure
          * `animation` - Animation
          * `comedy` - Comedy
          * `crime` - Crime
          * `documentary` - Documentary
          * `drama` - Drama
          * `family` - Family
          * `fantasy` - Fantasy
          * `horror` - Horror
          * `musical` - Musical
          * `mystery` - Mystery
          * `romance` - Romance
          * `sci-fi` - Science Fiction
          * `thriller` - Thriller
          * `war` - War
          * `western` - Western
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: language
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: rating
        schema:
          type: string
          x-spec-enum-id: 2152a8bdedfe5ef6
          enum:
          - G
          - NC-17
          - NR
          - PG
          - PG-13
          - R
        description: |-
          Movie rating

          * `G` - General Audiences
          * `PG` - Parental Guidance
          * `PG-13` - Parents Strongly Cautioned
          * `R` - Restricted
          * `NC-17` - Adults Only
          * `NR` - Not Rated
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - movies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMovieList'
          description: ''
  /movies/{id}/:
    delete:
      operationId: movies_destroy
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - movies
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: movies_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - movies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    patch:
      operationId: movies_partial_update
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMovieRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
    put:
      operationId: movies_update
      description: ViewSet for managing movies with CRUD operations
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - movies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MovieRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MovieRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
  /movies/{id}/showtimes/:
    get:
      operationId: movies_showtimes_retrieve
      description: Get showtimes for a specific movie
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Movie.
        required: true
      tags:
      - movies
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
          description: ''
  /showtimes/:
    post:
      operationId: showtimes_create
      description: ViewSet for managing showtimes with conflict detection and validation
      tags:
      - showtimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
    get:
      operationId: showtimes_list
      description: Override list method with caching
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: movie
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: screen_number
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: theater
        schema:
          type: integer
      tags:
      - showtimes
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShowtimeListList'
          description: ''
  /showtimes/{id}/:
    delete:
      operationId: showtimes_destroy
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: showtimes_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
    patch:
      operationId: showtimes_partial_update
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShowtimeCreateUpdateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
    put:
      operationId: showtimes_update
      description: ViewSet for managing showtimes with conflict detection and validation
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeCreateUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeCreateUpdate'
          description: ''
  /showtimes/{id}/availability/:
    get:
      operationId: showtimes_availability_retrieve
      description: Get seat availability for a showtime
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
  /showtimes/{id}/pricing/:
    post:
      operationId: showtimes_pricing_create
      description: Manage dynamic pricing for different time slots and seat categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShowtimeDetailRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
    get:
      operationId: showtimes_pricing_retrieve
      description: Manage dynamic pricing for different time slots and seat categories
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Showtime.
        required: true
      tags:
      - showtimes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowtimeDetail'
          description: ''
  /customer-bookings/:
    get:
      operationId: customer_bookings_list
      description: Override list method with caching
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - customer-bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingListList'
          description: ''
  /customer-bookings/analytics/:
    get:
      operationId: customer_bookings_analytics_retrieve
      description: Get customer booking analytics
      tags:
      - customer-bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /customer-bookings/{id}/:
    get:
      operationId: customer_bookings_retrieve
      description: Override retrieve method with caching
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /customer-bookings/{id}/cancel/:
    post:
      operationId: customer_bookings_cancel_create
      description: Cancel a booking with optional refund
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingListRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /customer-bookings/{id}/tickets/:
    get:
      operationId: customer_bookings_tickets_retrieve
      description: Get tickets for a specific booking
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - customer-bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
  /reviews/:
    post:
      operationId: reviews_create
      description: ViewSet for customer reviews
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    get:
      operationId: reviews_list
      description: ViewSet for customer reviews
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reviews
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerReviewList'
          description: ''
  /reviews/{id}/:
    delete:
      operationId: reviews_destroy
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: reviews_retrieve
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    patch:
      operationId: reviews_partial_update
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerReviewRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
    put:
      operationId: reviews_update
      description: ViewSet for customer reviews
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerReviewRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerReview'
          description: ''
  /waitlist/:
    post:
      operationId: waitlist_create
      description: ViewSet for waitlist management
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    get:
      operationId: waitlist_list
      description: ViewSet for waitlist management
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - waitlist
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWaitlistEntryList'
          description: ''
  /waitlist/join_event_waitlist/:
    post:
      operationId: waitlist_join_event_waitlist_create
      description: Join waitlist for a sold-out event
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /waitlist/join_showtime_waitlist/:
    post:
      operationId: waitlist_join_showtime_waitlist_create
      description: Join waitlist for a sold-out showtime
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /waitlist/{id}/:
    delete:
      operationId: waitlist_destroy
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - waitlist
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
    get:
      operationId: waitlist_retrieve
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - waitlist
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    patch:
      operationId: waitlist_partial_update
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWaitlistEntryRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
    put:
      operationId: waitlist_update
      description: ViewSet for waitlist management
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - waitlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WaitlistEntryRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaitlistEntry'
          description: ''
  /tickets/validate/:
    post:
      operationId: tickets_validate_create
      description: |-
        Validate a ticket for entry

        POST /api/tickets/validate/
        {
            "ticket_identifier": "TKT-20241011-ABC12345" or QR code data,
            "scanner_id": "Scanner1"
        }
      tags:
      - tickets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /tickets/info/{ticket_identifier}/:
    get:
      operationId: tickets_info_retrieve
      description: |-
        Get ticket information without validating/using it

        GET /api/tickets/info/{ticket_identifier}/
      parameters:
      - in: path
        name: ticket_identifier
        schema:
          type: string
        required: true
      tags:
      - tickets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /tickets/{ticket_id}/status/:
    post:
      operationId: tickets_status_create
      description: |-
        Change ticket status

        POST /api/tickets/{ticket_id}/status/
        {
            "new_status": "cancelled",
            "reason": "Customer request",
            "changed_by": "Admin"
        }
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: integer
        required: true
      tags:
      - tickets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /tickets/{ticket_id}/pdf/:
    get:
      operationId: tickets_pdf_retrieve
      description: |-
        Download PDF for a specific ticket

        GET /api/tickets/{ticket_id}/pdf/
      parameters:
      - in: path
        name: ticket_id
        schema:
          type: integer
        required: true
      tags:
      - tickets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /tickets/bulk-expire/:
    post:
      operationId: tickets_bulk_expire_create
      description: |-
        Bulk expire old tickets (admin only)

        POST /api/tickets/bulk-expire/
      tags:
      - tickets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/tickets/pdf/:
    get:
      operationId: bookings_tickets_pdf_retrieve
      description: |-
        Download PDF for all tickets in a booking

        GET /api/bookings/{booking_id}/tickets/pdf/
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/cancel-tickets/:
    post:
      operationId: bookings_cancel_tickets_create
      description: |-
        Cancel all tickets in a booking

        POST /api/bookings/{booking_id}/cancel-tickets/
        {
            "reason": "Customer cancellation"
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/payment/intent/:
    post:
      operationId: bookings_payment_intent_create
      description: |-
        Create a Stripe PaymentIntent for a booking

        POST /api/bookings/{booking_id}/payment/intent/

        Request body:
        {
            "payment_method_id": "pm_1234567890",  // Optional
            "confirm_immediately": false           // Optional
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/payment/confirm/:
    post:
      operationId: bookings_payment_confirm_create
      description: |-
        Confirm a PaymentIntent for a booking

        POST /api/bookings/{booking_id}/payment/confirm/

        Request body:
        {
            "payment_method_id": "pm_1234567890"  // Optional
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/payment/status/:
    get:
      operationId: bookings_payment_status_retrieve
      description: |-
        Get payment status for a booking

        GET /api/bookings/{booking_id}/payment/status/
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/payment/refund/:
    post:
      operationId: bookings_payment_refund_create
      description: |-
        Request a refund for a booking

        POST /api/bookings/{booking_id}/payment/refund/

        Request body:
        {
            "amount": "50.00",                    // Optional partial refund amount
            "reason": "requested_by_customer"     // Optional reason
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /bookings/{booking_id}/payment/retry/:
    post:
      operationId: bookings_payment_retry_create
      description: |-
        Retry payment for a failed booking

        POST /api/bookings/{booking_id}/payment/retry/

        Request body:
        {
            "payment_method_id": "pm_1234567890"  // Required
        }
      parameters:
      - in: path
        name: booking_id
        schema:
          type: integer
        required: true
      tags:
      - bookings
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /payment/config/:
    get:
      operationId: payment_config_retrieve
      description: |-
        Get Stripe configuration for frontend

        GET /api/payment/config/
      tags:
      - payment
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /webhooks/stripe/:
    post:
      operationId: webhooks_stripe_create
      description: DRF-based Stripe webhook endpoint
      tags:
      - webhooks
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /webhooks/health/:
    get:
      operationId: webhooks_health_retrieve
      description: Health check endpoint for webhook monitoring
      tags:
      - webhooks
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /history/summary/:
    get:
      operationId: history_summary_retrieve
      description: Get a summary of customer's booking history
      tags:
      - history
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /upcoming/:
    get:
      operationId: upcoming_retrieve
      description: Get customer's upcoming bookings
      tags:
      - upcoming
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/system/:
    get:
      operationId: analytics_system_retrieve
      description: |-
        Get system-wide analytics (admin only)

        Query parameters:
        - date_from: Start date (YYYY-MM-DD)
        - date_to: End date (YYYY-MM-DD)
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/events/{event_id}/:
    get:
      operationId: analytics_events_retrieve
      description: |-
        Get analytics for a specific event

        Event owners can only view their own events.
        Admins can view any event.
      parameters:
      - in: path
        name: event_id
        schema:
          type: integer
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/theaters/{theater_id}/:
    get:
      operationId: analytics_theaters_retrieve
      description: |-
        Get analytics for a specific theater

        Theater owners can only view their own theaters.
        Admins can view any theater.
      parameters:
      - in: path
        name: theater_id
        schema:
          type: integer
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/trends/{entity_type}/{entity_id}/:
    get:
      operationId: analytics_trends_retrieve
      description: |-
        Get trend analysis for events or theaters

        Query parameters:
        - days: Number of days to analyze (default: 30)
      parameters:
      - in: path
        name: entity_id
        schema:
          type: integer
        required: true
      - in: path
        name: entity_type
        schema:
          type: string
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/insights/:
    get:
      operationId: analytics_insights_retrieve
      description: Get recommendation insights based on booking patterns
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/reports/{report_type}/:
    get:
      operationId: analytics_reports_retrieve
      description: |-
        Export analytics report as CSV or PDF

        Query parameters:
        - format: 'csv' or 'pdf' (default: 'csv')
        - date_from: Start date for system reports (YYYY-MM-DD)
        - date_to: End date for system reports (YYYY-MM-DD)
      parameters:
      - in: path
        name: report_type
        schema:
          type: string
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /analytics/reports/{report_type}/{entity_id}/:
    get:
      operationId: analytics_reports_retrieve_2
      description: |-
        Export analytics report as CSV or PDF

        Query parameters:
        - format: 'csv' or 'pdf' (default: 'csv')
        - date_from: Start date for system reports (YYYY-MM-DD)
        - date_to: End date for system reports (YYYY-MM-DD)
      parameters:
      - in: path
        name: entity_id
        schema:
          type: integer
        required: true
      - in: path
        name: report_type
        schema:
          type: string
        required: true
      tags:
      - analytics
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /notifications/preferences/:
    get:
      operationId: notifications_preferences_retrieve
      description: Get current user's notification preferences
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: notifications_preferences_update
      description: Update user notification preferences
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /notifications/opt-out-all/:
    post:
      operationId: notifications_opt_out_all_create
      description: Opt out of all notifications
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /notifications/opt-in-essential/:
    post:
      operationId: notifications_opt_in_essential_create
      description: Opt in to essential notifications only (booking confirmations)
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /notifications/logs/:
    get:
      operationId: notifications_logs_list
      description: List notification logs for the current user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /notifications/admin/logs/:
    get:
      operationId: notifications_admin_logs_list
      description: List all notification logs (admin only)
      parameters:
      - in: query
        name: channel
        schema:
          type: string
      - in: query
        name: notification_type
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          x-spec-enum-id: 2e86f9036480ef10
          enum:
          - delivered
          - failed
          - pending
          - sent
        description: |-
          * `pending` - Pending
          * `sent` - Sent
          * `failed` - Failed
          * `delivered` - Delivered
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /notifications/templates/:
    get:
      operationId: notifications_templates_list
      description: List notification templates (admin only)
      parameters:
      - in: query
        name: channel
        schema:
          type: string
          x-spec-enum-id: b93ea89afe3c6c28
          enum:
          - email
          - push
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `push` - Push Notification
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          x-spec-enum-id: b5be9a6d4454a2db
          enum:
          - booking_cancellation
          - booking_confirmation
          - booking_reminder
          - event_update
          - payment_failed
          - payment_success
          - system_maintenance
        description: |-
          * `booking_confirmation` - Booking Confirmation
          * `booking_reminder` - Booking Reminder
          * `booking_cancellation` - Booking Cancellation
          * `event_update` - Event Update
          * `system_maintenance` - System Maintenance
          * `payment_success` - Payment Success
          * `payment_failed` - Payment Failed
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTemplateList'
          description: ''
  /notifications/templates/{id}/:
    get:
      operationId: notifications_templates_retrieve
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
    put:
      operationId: notifications_templates_update
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationTemplateRequest'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
    patch:
      operationId: notifications_templates_partial_update
      description: Retrieve and update notification templates (admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationTemplateRequest'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
  /notifications/send-bulk/:
    post:
      operationId: notifications_send_bulk_create
      description: Send bulk notifications (admin only)
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /notifications/test/:
    post:
      operationId: notifications_test_create
      description: Send test notification to current user
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /:
    get:
      operationId: root_retrieve
      description: |-
        Get the main API documentation index.

        Returns the comprehensive API documentation index with navigation
        and quick start information.
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /guides/:
    get:
      operationId: guides_retrieve
      description: Returns available API usage guides for different user roles.
      summary: Get API usage guides
      tags:
      - API Documentation
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Available usage guides
                example:
                  available_guides:
                  - customer
                  - event_owner
                  - theater_owner
                  - admin
                  - integration
                  guides:
                    customer:
                      title: Customer API Usage Guide
                      description: Guide for customers booking events and movies
                      url: /api/guides/customer/
          description: ''
  /guides/{role}/:
    get:
      operationId: guides_retrieve_2
      description: |-
        Get API usage guide for a specific role.

        Args:
            role (str): User role (customer, event_owner, theater_owner, admin, integration)

        Returns:
            HttpResponse: Markdown content of the usage guide
      parameters:
      - in: path
        name: role
        schema:
          type: string
        required: true
      tags:
      - guides
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /changelog/:
    get:
      operationId: changelog_retrieve
      description: Get API changelog.
      tags:
      - changelog
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /postman/:
    get:
      operationId: postman_retrieve
      description: Get Postman collection information.
      tags:
      - postman
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /sdk/{sdk_type}/:
    get:
      operationId: sdk_retrieve
      description: Get SDK documentation for specific language/platform.
      parameters:
      - in: path
        name: sdk_type
        schema:
          type: string
        required: true
      tags:
      - sdk
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /health/:
    get:
      operationId: health_retrieve
      description: Simple health check endpoint to verify API availability.
      summary: API health check
      tags:
      - API Information
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: API is healthy
                example:
                  status: healthy
                  version: v1
                  timestamp: '2024-01-15T10:30:00Z'
          description: ''
components:
  schemas:
    BookingDetail:
      type: object
      description: Serializer for Booking detail view (full data)
      properties:
        id:
          type: integer
          readOnly: true
        booking_reference:
          type: string
          maxLength: 20
        booking_type:
          enum:
          - event
          - movie
          type: string
          description: |-
            * `event` - Event Booking
            * `movie` - Movie Booking
          x-spec-enum-id: 64f3d8d16ede0837
        booking_type_display:
          type: string
          readOnly: true
        event_or_showtime_title:
          type: string
          readOnly: true
        event_or_showtime_datetime:
          type: string
          readOnly: true
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        fees:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_status:
          enum:
          - pending
          - processing
          - completed
          - failed
          - refunded
          - partially_refunded
          type: string
          description: |-
            * `pending` - Pending
            * `processing` - Processing
            * `completed` - Completed
            * `failed` - Failed
            * `refunded` - Refunded
            * `partially_refunded` - Partially Refunded
          x-spec-enum-id: 0e254ca3d110f5a2
        payment_status_display:
          type: string
          readOnly: true
        booking_status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          - no_show
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
            * `no_show` - No Show
          x-spec-enum-id: 728e301de443c118
        booking_status_display:
          type: string
          readOnly: true
        payment_method:
          type: string
          maxLength: 50
        customer_email:
          type: string
          format: email
          maxLength: 254
        customer_phone:
          type: string
          maxLength: 20
        special_requests:
          type: string
        ticket_count:
          type: string
          readOnly: true
        is_refundable:
          type: string
          readOnly: true
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
          readOnly: true
        venue_info:
          type: string
          readOnly: true
        event_details:
          type: string
          readOnly: true
        showtime_details:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - booking_reference
      - booking_status_display
      - booking_type
      - booking_type_display
      - created_at
      - customer_email
      - event_details
      - event_or_showtime_datetime
      - event_or_showtime_title
      - id
      - is_refundable
      - payment_status_display
      - showtime_details
      - subtotal
      - ticket_count
      - tickets
      - total_amount
      - updated_at
      - venue_info
    BookingList:
      type: object
      description: Serializer for Booking list view (minimal data)
      properties:
        id:
          type: integer
          readOnly: true
        booking_reference:
          type: string
          maxLength: 20
        booking_type:
          enum:
          - event
          - movie
          type: string
          description: |-
            * `event` - Event Booking
            * `movie` - Movie Booking
          x-spec-enum-id: 64f3d8d16ede0837
        booking_type_display:
          type: string
          readOnly: true
        event_or_showtime_title:
          type: string
          readOnly: true
        event_or_showtime_datetime:
          type: string
          readOnly: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_status:
          enum:
          - pending
          - processing
          - completed
          - failed
          - refunded
          - partially_refunded
          type: string
          description: |-
            * `pending` - Pending
            * `processing` - Processing
            * `completed` - Completed
            * `failed` - Failed
            * `refunded` - Refunded
            * `partially_refunded` - Partially Refunded
          x-spec-enum-id: 0e254ca3d110f5a2
        payment_status_display:
          type: string
          readOnly: true
        booking_status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          - no_show
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
            * `no_show` - No Show
          x-spec-enum-id: 728e301de443c118
        booking_status_display:
          type: string
          readOnly: true
        ticket_count:
          type: string
          readOnly: true
        is_refundable:
          type: string
          readOnly: true
        venue_info:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - booking_reference
      - booking_status_display
      - booking_type
      - booking_type_display
      - created_at
      - event_or_showtime_datetime
      - event_or_showtime_title
      - id
      - is_refundable
      - payment_status_display
      - ticket_count
      - total_amount
      - updated_at
      - venue_info
    BookingListRequest:
      type: object
      description: Serializer for Booking list view (minimal data)
      properties:
        booking_reference:
          type: string
          minLength: 1
          maxLength: 20
        booking_type:
          enum:
          - event
          - movie
          type: string
          description: |-
            * `event` - Event Booking
            * `movie` - Movie Booking
          x-spec-enum-id: 64f3d8d16ede0837
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_status:
          enum:
          - pending
          - processing
          - completed
          - failed
          - refunded
          - partially_refunded
          type: string
          description: |-
            * `pending` - Pending
            * `processing` - Processing
            * `completed` - Completed
            * `failed` - Failed
            * `refunded` - Refunded
            * `partially_refunded` - Partially Refunded
          x-spec-enum-id: 0e254ca3d110f5a2
        booking_status:
          enum:
          - pending
          - confirmed
          - cancelled
          - completed
          - no_show
          type: string
          description: |-
            * `pending` - Pending
            * `confirmed` - Confirmed
            * `cancelled` - Cancelled
            * `completed` - Completed
            * `no_show` - No Show
          x-spec-enum-id: 728e301de443c118
      required:
      - booking_reference
      - booking_type
      - total_amount
    CustomerReview:
      type: object
      description: Serializer for customer reviews and ratings
      properties:
        id:
          type: integer
          readOnly: true
        rating:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
          description: |-
            * `1` - 1 Star
            * `2` - 2 Stars
            * `3` - 3 Stars
            * `4` - 4 Stars
            * `5` - 5 Stars
          x-spec-enum-id: 6b54c3a412efa01a
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        review_text:
          type: string
        reviewer_name:
          type: string
          readOnly: true
        reviewer_username:
          type: string
          readOnly: true
        is_verified_purchase:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_verified_purchase
      - rating
      - reviewer_name
      - reviewer_username
      - updated_at
    CustomerReviewRequest:
      type: object
      description: Serializer for customer reviews and ratings
      properties:
        rating:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
          description: |-
            * `1` - 1 Star
            * `2` - 2 Stars
            * `3` - 3 Stars
            * `4` - 4 Stars
            * `5` - 5 Stars
          x-spec-enum-id: 6b54c3a412efa01a
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        review_text:
          type: string
      required:
      - rating
    Discount:
      type: object
      description: Serializer for Discount model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Discount name
          maxLength: 100
        description:
          type: string
          description: Discount description
        discount_type:
          enum:
          - percentage
          - fixed_amount
          type: string
          x-spec-enum-id: 4ea428415d8adf10
          description: |-
            Type of discount

            * `percentage` - Percentage
            * `fixed_amount` - Fixed Amount
        discount_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount value (percentage or fixed amount)
        category:
          enum:
          - promo_code
          - early_bird
          - group
          - student
          - senior
          type: string
          x-spec-enum-id: e5533b0f74816f7a
          description: |-
            Discount category

            * `promo_code` - Promo Code
            * `early_bird` - Early Bird
            * `group` - Group Discount
            * `student` - Student Discount
            * `senior` - Senior Discount
        promo_code:
          type: string
          nullable: true
          description: Promo code for discount (if applicable)
          maxLength: 50
        max_uses:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Maximum number of times this discount can be used
        current_uses:
          type: integer
          readOnly: true
          description: Current number of times this discount has been used
        valid_from:
          type: string
          format: date-time
          description: Discount valid from
        valid_until:
          type: string
          format: date-time
          description: Discount valid until
        is_active:
          type: boolean
          description: Whether discount is active
        is_valid:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - category
      - created_at
      - current_uses
      - discount_type
      - discount_value
      - id
      - is_valid
      - name
      - updated_at
      - valid_from
      - valid_until
    DiscountRequest:
      type: object
      description: Serializer for Discount model
      properties:
        name:
          type: string
          minLength: 1
          description: Discount name
          maxLength: 100
        description:
          type: string
          description: Discount description
        discount_type:
          enum:
          - percentage
          - fixed_amount
          type: string
          x-spec-enum-id: 4ea428415d8adf10
          description: |-
            Type of discount

            * `percentage` - Percentage
            * `fixed_amount` - Fixed Amount
        discount_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount value (percentage or fixed amount)
        category:
          enum:
          - promo_code
          - early_bird
          - group
          - student
          - senior
          type: string
          x-spec-enum-id: e5533b0f74816f7a
          description: |-
            Discount category

            * `promo_code` - Promo Code
            * `early_bird` - Early Bird
            * `group` - Group Discount
            * `student` - Student Discount
            * `senior` - Senior Discount
        promo_code:
          type: string
          nullable: true
          description: Promo code for discount (if applicable)
          maxLength: 50
        max_uses:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Maximum number of times this discount can be used
        valid_from:
          type: string
          format: date-time
          description: Discount valid from
        valid_until:
          type: string
          format: date-time
          description: Discount valid until
        is_active:
          type: boolean
          description: Whether discount is active
      required:
      - category
      - discount_type
      - discount_value
      - name
      - valid_from
      - valid_until
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code for programmatic handling
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error details
            timestamp:
              type: string
              format: date-time
              description: Error timestamp
          required:
          - code
          - message
          - timestamp
      required:
      - error
    EventCreateUpdate:
      type: object
      description: Serializer for Event creation and updates
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        description:
          type: string
          description: Detailed event description
        venue:
          type: string
          description: Venue name
          maxLength: 200
        address:
          type: string
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
      required:
      - address
      - description
      - end_datetime
      - id
      - start_datetime
      - title
      - venue
    EventCreateUpdateRequest:
      type: object
      description: Serializer for Event creation and updates
      properties:
        title:
          type: string
          minLength: 1
          description: Event title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed event description
        venue:
          type: string
          minLength: 1
          description: Venue name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
      required:
      - address
      - description
      - end_datetime
      - start_datetime
      - title
      - venue
    EventDetail:
      type: object
      description: Serializer for Event detail view (full data)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        description:
          type: string
          description: Detailed event description
        venue:
          type: string
          description: Venue name
          maxLength: 200
        address:
          type: string
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
        owner_name:
          type: string
          readOnly: true
        owner_username:
          type: string
          readOnly: true
        ticket_types:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
          readOnly: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
          readOnly: true
        total_tickets_available:
          type: string
          readOnly: true
        total_tickets_sold:
          type: string
          readOnly: true
        tickets_remaining:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        is_past:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - description
      - discounts
      - end_datetime
      - id
      - is_ongoing
      - is_past
      - is_upcoming
      - owner_name
      - owner_username
      - start_datetime
      - ticket_types
      - tickets_remaining
      - title
      - total_tickets_available
      - total_tickets_sold
      - updated_at
      - venue
    EventDetailRequest:
      type: object
      description: Serializer for Event detail view (full data)
      properties:
        title:
          type: string
          minLength: 1
          description: Event title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed event description
        venue:
          type: string
          minLength: 1
          description: Venue name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
      required:
      - address
      - description
      - end_datetime
      - start_datetime
      - title
      - venue
    EventList:
      type: object
      description: Serializer for Event list view (minimal data)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Event title
          maxLength: 200
        venue:
          type: string
          description: Venue name
          maxLength: 200
        address:
          type: string
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
        owner_name:
          type: string
          readOnly: true
        owner_username:
          type: string
          readOnly: true
        total_tickets_available:
          type: string
          readOnly: true
        total_tickets_sold:
          type: string
          readOnly: true
        tickets_remaining:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_ongoing:
          type: string
          readOnly: true
        is_past:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - end_datetime
      - id
      - is_ongoing
      - is_past
      - is_upcoming
      - owner_name
      - owner_username
      - start_datetime
      - tickets_remaining
      - title
      - total_tickets_available
      - total_tickets_sold
      - updated_at
      - venue
    Movie:
      type: object
      description: Serializer for Movie model with CRUD operations
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Movie title
          maxLength: 200
        description:
          type: string
          description: Movie plot/description
        genre:
          enum:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - horror
          - musical
          - mystery
          - romance
          - sci-fi
          - thriller
          - war
          - western
          type: string
          x-spec-enum-id: 77970e268766ca90
          description: |-
            Primary movie genre

            * `action` - Action
            * `adventure` - Adventure
            * `animation` - Animation
            * `comedy` - Comedy
            * `crime` - Crime
            * `documentary` - Documentary
            * `drama` - Drama
            * `family` - Family
            * `fantasy` - Fantasy
            * `horror` - Horror
            * `musical` - Musical
            * `mystery` - Mystery
            * `romance` - Romance
            * `sci-fi` - Science Fiction
            * `thriller` - Thriller
            * `war` - War
            * `western` - Western
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Movie duration in minutes
        duration_formatted:
          type: string
          readOnly: true
        rating:
          enum:
          - G
          - PG
          - PG-13
          - R
          - NC-17
          - NR
          type: string
          x-spec-enum-id: 2152a8bdedfe5ef6
          description: |-
            Movie rating

            * `G` - General Audiences
            * `PG` - Parental Guidance
            * `PG-13` - Parents Strongly Cautioned
            * `R` - Restricted
            * `NC-17` - Adults Only
            * `NR` - Not Rated
        cast:
          description: List of main cast members
        director:
          type: string
          description: Movie director
          maxLength: 100
        producer:
          type: string
          description: Movie producer
          maxLength: 100
        poster_url:
          type: string
          format: uri
          description: Movie poster URL
          maxLength: 200
        trailer_url:
          type: string
          format: uri
          description: Movie trailer URL
          maxLength: 200
        release_date:
          type: string
          format: date
          description: Movie release date
        language:
          type: string
          description: Primary language
          maxLength: 50
        is_active:
          type: boolean
          description: Whether the movie is available for scheduling
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - director
      - duration
      - duration_formatted
      - genre
      - id
      - release_date
      - title
      - updated_at
    MovieRequest:
      type: object
      description: Serializer for Movie model with CRUD operations
      properties:
        title:
          type: string
          minLength: 1
          description: Movie title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Movie plot/description
        genre:
          enum:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - horror
          - musical
          - mystery
          - romance
          - sci-fi
          - thriller
          - war
          - western
          type: string
          x-spec-enum-id: 77970e268766ca90
          description: |-
            Primary movie genre

            * `action` - Action
            * `adventure` - Adventure
            * `animation` - Animation
            * `comedy` - Comedy
            * `crime` - Crime
            * `documentary` - Documentary
            * `drama` - Drama
            * `family` - Family
            * `fantasy` - Fantasy
            * `horror` - Horror
            * `musical` - Musical
            * `mystery` - Mystery
            * `romance` - Romance
            * `sci-fi` - Science Fiction
            * `thriller` - Thriller
            * `war` - War
            * `western` - Western
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Movie duration in minutes
        rating:
          enum:
          - G
          - PG
          - PG-13
          - R
          - NC-17
          - NR
          type: string
          x-spec-enum-id: 2152a8bdedfe5ef6
          description: |-
            Movie rating

            * `G` - General Audiences
            * `PG` - Parental Guidance
            * `PG-13` - Parents Strongly Cautioned
            * `R` - Restricted
            * `NC-17` - Adults Only
            * `NR` - Not Rated
        cast:
          description: List of main cast members
        director:
          type: string
          minLength: 1
          description: Movie director
          maxLength: 100
        producer:
          type: string
          description: Movie producer
          maxLength: 100
        poster_url:
          type: string
          format: uri
          description: Movie poster URL
          maxLength: 200
        trailer_url:
          type: string
          format: uri
          description: Movie trailer URL
          maxLength: 200
        release_date:
          type: string
          format: date
          description: Movie release date
        language:
          type: string
          minLength: 1
          description: Primary language
          maxLength: 50
        is_active:
          type: boolean
          description: Whether the movie is available for scheduling
      required:
      - description
      - director
      - duration
      - genre
      - release_date
      - title
    NotificationLog:
      type: object
      description: Serializer for notification logs
      properties:
        id:
          type: integer
          readOnly: true
        user_email:
          type: string
          readOnly: true
        notification_type:
          type: string
          maxLength: 50
        channel:
          type: string
          maxLength: 20
        recipient:
          type: string
          maxLength: 200
        subject:
          type: string
          maxLength: 200
        status:
          enum:
          - pending
          - sent
          - failed
          - delivered
          type: string
          description: |-
            * `pending` - Pending
            * `sent` - Sent
            * `failed` - Failed
            * `delivered` - Delivered
          x-spec-enum-id: 2e86f9036480ef10
        error_message:
          type: string
        sent_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel
      - created_at
      - id
      - notification_type
      - recipient
      - user_email
    NotificationTemplate:
      type: object
      description: Serializer for notification templates
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        notification_type:
          enum:
          - booking_confirmation
          - booking_reminder
          - booking_cancellation
          - event_update
          - system_maintenance
          - payment_success
          - payment_failed
          type: string
          description: |-
            * `booking_confirmation` - Booking Confirmation
            * `booking_reminder` - Booking Reminder
            * `booking_cancellation` - Booking Cancellation
            * `event_update` - Event Update
            * `system_maintenance` - System Maintenance
            * `payment_success` - Payment Success
            * `payment_failed` - Payment Failed
          x-spec-enum-id: b5be9a6d4454a2db
        channel:
          enum:
          - email
          - sms
          - push
          type: string
          description: |-
            * `email` - Email
            * `sms` - SMS
            * `push` - Push Notification
          x-spec-enum-id: b93ea89afe3c6c28
        subject:
          type: string
          maxLength: 200
        template_content:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - channel
      - created_at
      - id
      - name
      - notification_type
      - template_content
      - updated_at
    NotificationTemplateRequest:
      type: object
      description: Serializer for notification templates
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        notification_type:
          enum:
          - booking_confirmation
          - booking_reminder
          - booking_cancellation
          - event_update
          - system_maintenance
          - payment_success
          - payment_failed
          type: string
          description: |-
            * `booking_confirmation` - Booking Confirmation
            * `booking_reminder` - Booking Reminder
            * `booking_cancellation` - Booking Cancellation
            * `event_update` - Event Update
            * `system_maintenance` - System Maintenance
            * `payment_success` - Payment Success
            * `payment_failed` - Payment Failed
          x-spec-enum-id: b5be9a6d4454a2db
        channel:
          enum:
          - email
          - sms
          - push
          type: string
          description: |-
            * `email` - Email
            * `sms` - SMS
            * `push` - Push Notification
          x-spec-enum-id: b93ea89afe3c6c28
        subject:
          type: string
          maxLength: 200
        template_content:
          type: string
          minLength: 1
        is_active:
          type: boolean
      required:
      - channel
      - name
      - notification_type
      - template_content
    PaginatedBookingListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BookingList'
    PaginatedCustomerReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomerReview'
    PaginatedDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    PaginatedEventListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EventList'
    PaginatedMovieList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Movie'
    PaginatedNotificationLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationLog'
    PaginatedNotificationTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplate'
    PaginatedShowtimeListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShowtimeList'
    PaginatedTheaterListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TheaterList'
    PaginatedTicketTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWaitlistEntryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WaitlistEntry'
    PatchedCustomerReviewRequest:
      type: object
      description: Serializer for customer reviews and ratings
      properties:
        rating:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          type: integer
          description: |-
            * `1` - 1 Star
            * `2` - 2 Stars
            * `3` - 3 Stars
            * `4` - 4 Stars
            * `5` - 5 Stars
          x-spec-enum-id: 6b54c3a412efa01a
          minimum: -9223372036854775808
          maximum: 9223372036854775807
        review_text:
          type: string
    PatchedDiscountRequest:
      type: object
      description: Serializer for Discount model
      properties:
        name:
          type: string
          minLength: 1
          description: Discount name
          maxLength: 100
        description:
          type: string
          description: Discount description
        discount_type:
          enum:
          - percentage
          - fixed_amount
          type: string
          x-spec-enum-id: 4ea428415d8adf10
          description: |-
            Type of discount

            * `percentage` - Percentage
            * `fixed_amount` - Fixed Amount
        discount_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount value (percentage or fixed amount)
        category:
          enum:
          - promo_code
          - early_bird
          - group
          - student
          - senior
          type: string
          x-spec-enum-id: e5533b0f74816f7a
          description: |-
            Discount category

            * `promo_code` - Promo Code
            * `early_bird` - Early Bird
            * `group` - Group Discount
            * `student` - Student Discount
            * `senior` - Senior Discount
        promo_code:
          type: string
          nullable: true
          description: Promo code for discount (if applicable)
          maxLength: 50
        max_uses:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          nullable: true
          description: Maximum number of times this discount can be used
        valid_from:
          type: string
          format: date-time
          description: Discount valid from
        valid_until:
          type: string
          format: date-time
          description: Discount valid until
        is_active:
          type: boolean
          description: Whether discount is active
    PatchedEventCreateUpdateRequest:
      type: object
      description: Serializer for Event creation and updates
      properties:
        title:
          type: string
          minLength: 1
          description: Event title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed event description
        venue:
          type: string
          minLength: 1
          description: Venue name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
    PatchedEventDetailRequest:
      type: object
      description: Serializer for Event detail view (full data)
      properties:
        title:
          type: string
          minLength: 1
          description: Event title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed event description
        venue:
          type: string
          minLength: 1
          description: Venue name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full venue address
        category:
          enum:
          - concert
          - theater
          - sports
          - conference
          - workshop
          - festival
          - comedy
          - other
          type: string
          x-spec-enum-id: af6ada5c80318cac
          description: |-
            Event category

            * `concert` - Concert
            * `theater` - Theater
            * `sports` - Sports
            * `conference` - Conference
            * `workshop` - Workshop
            * `festival` - Festival
            * `comedy` - Comedy
            * `other` - Other
        start_datetime:
          type: string
          format: date-time
          description: Event start date and time
        end_datetime:
          type: string
          format: date-time
          description: Event end date and time
        media:
          description: List of media URLs (images, videos)
        status:
          enum:
          - draft
          - published
          - cancelled
          - completed
          type: string
          x-spec-enum-id: 66ae800ab43e42d8
          description: |-
            Event status

            * `draft` - Draft
            * `published` - Published
            * `cancelled` - Cancelled
            * `completed` - Completed
        is_active:
          type: boolean
          description: Whether the event is active and visible
    PatchedMovieRequest:
      type: object
      description: Serializer for Movie model with CRUD operations
      properties:
        title:
          type: string
          minLength: 1
          description: Movie title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Movie plot/description
        genre:
          enum:
          - action
          - adventure
          - animation
          - comedy
          - crime
          - documentary
          - drama
          - family
          - fantasy
          - horror
          - musical
          - mystery
          - romance
          - sci-fi
          - thriller
          - war
          - western
          type: string
          x-spec-enum-id: 77970e268766ca90
          description: |-
            Primary movie genre

            * `action` - Action
            * `adventure` - Adventure
            * `animation` - Animation
            * `comedy` - Comedy
            * `crime` - Crime
            * `documentary` - Documentary
            * `drama` - Drama
            * `family` - Family
            * `fantasy` - Fantasy
            * `horror` - Horror
            * `musical` - Musical
            * `mystery` - Mystery
            * `romance` - Romance
            * `sci-fi` - Science Fiction
            * `thriller` - Thriller
            * `war` - War
            * `western` - Western
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Movie duration in minutes
        rating:
          enum:
          - G
          - PG
          - PG-13
          - R
          - NC-17
          - NR
          type: string
          x-spec-enum-id: 2152a8bdedfe5ef6
          description: |-
            Movie rating

            * `G` - General Audiences
            * `PG` - Parental Guidance
            * `PG-13` - Parents Strongly Cautioned
            * `R` - Restricted
            * `NC-17` - Adults Only
            * `NR` - Not Rated
        cast:
          description: List of main cast members
        director:
          type: string
          minLength: 1
          description: Movie director
          maxLength: 100
        producer:
          type: string
          description: Movie producer
          maxLength: 100
        poster_url:
          type: string
          format: uri
          description: Movie poster URL
          maxLength: 200
        trailer_url:
          type: string
          format: uri
          description: Movie trailer URL
          maxLength: 200
        release_date:
          type: string
          format: date
          description: Movie release date
        language:
          type: string
          minLength: 1
          description: Primary language
          maxLength: 50
        is_active:
          type: boolean
          description: Whether the movie is available for scheduling
    PatchedNotificationTemplateRequest:
      type: object
      description: Serializer for notification templates
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        notification_type:
          enum:
          - booking_confirmation
          - booking_reminder
          - booking_cancellation
          - event_update
          - system_maintenance
          - payment_success
          - payment_failed
          type: string
          description: |-
            * `booking_confirmation` - Booking Confirmation
            * `booking_reminder` - Booking Reminder
            * `booking_cancellation` - Booking Cancellation
            * `event_update` - Event Update
            * `system_maintenance` - System Maintenance
            * `payment_success` - Payment Success
            * `payment_failed` - Payment Failed
          x-spec-enum-id: b5be9a6d4454a2db
        channel:
          enum:
          - email
          - sms
          - push
          type: string
          description: |-
            * `email` - Email
            * `sms` - SMS
            * `push` - Push Notification
          x-spec-enum-id: b93ea89afe3c6c28
        subject:
          type: string
          maxLength: 200
        template_content:
          type: string
          minLength: 1
        is_active:
          type: boolean
    PatchedShowtimeCreateUpdateRequest:
      type: object
      description: Serializer for Showtime creation and updates
      properties:
        movie:
          type: integer
          description: Movie being shown
        theater:
          type: integer
          description: Theater where the movie is shown
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        seat_pricing:
          description: Pricing for different seat categories
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
    PatchedTheaterCreateUpdateRequest:
      type: object
      description: Serializer for Theater creation and updates
      properties:
        name:
          type: string
          minLength: 1
          description: Theater name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full theater address
        city:
          type: string
          minLength: 1
          description: City
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          minLength: 1
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        seating_layout:
          description: Seating configuration for each screen
        amenities:
          description: List of theater amenities
        is_active:
          type: boolean
          description: Whether the theater is active and operational
    PatchedTicketTypeRequest:
      type: object
      description: Serializer for TicketType model
      properties:
        name:
          type: string
          minLength: 1
          description: Ticket type name (e.g., VIP, General, Student)
          maxLength: 100
        description:
          type: string
          description: Detailed description of what this ticket type includes
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Ticket price
        quantity_available:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Total number of tickets available for this type
        is_active:
          type: boolean
          description: Whether this ticket type is available for purchase
        sale_start_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales start (optional)
        sale_end_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales end (optional)
    PatchedWaitlistEntryRequest:
      type: object
      description: Serializer for waitlist entries
      properties:
        ticket_type_name:
          type: string
          maxLength: 100
        quantity_requested:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        max_price_willing_to_pay:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        expires_at:
          type: string
          format: date-time
    ShowtimeCreateUpdate:
      type: object
      description: Serializer for Showtime creation and updates
      properties:
        movie:
          type: integer
          description: Movie being shown
        theater:
          type: integer
          description: Theater where the movie is shown
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        seat_pricing:
          description: Pricing for different seat categories
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
      required:
      - base_price
      - end_time
      - movie
      - screen_number
      - start_time
      - theater
    ShowtimeCreateUpdateRequest:
      type: object
      description: Serializer for Showtime creation and updates
      properties:
        movie:
          type: integer
          description: Movie being shown
        theater:
          type: integer
          description: Theater where the movie is shown
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        seat_pricing:
          description: Pricing for different seat categories
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
      required:
      - base_price
      - end_time
      - movie
      - screen_number
      - start_time
      - theater
    ShowtimeDetail:
      type: object
      description: Serializer for Showtime detail view
      properties:
        id:
          type: integer
          readOnly: true
        movie:
          allOf:
          - $ref: '#/components/schemas/Movie'
          readOnly: true
        theater:
          allOf:
          - $ref: '#/components/schemas/TheaterList'
          readOnly: true
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        seat_pricing:
          description: Pricing for different seat categories
        total_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total number of seats available for this showtime
        available_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Number of seats currently available
        booked_seats:
          description: List of booked seat identifiers
        seats_booked:
          type: string
          readOnly: true
        occupancy_percentage:
          type: string
          readOnly: true
        is_sold_out:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - available_seats
      - base_price
      - created_at
      - end_time
      - id
      - is_sold_out
      - is_upcoming
      - movie
      - occupancy_percentage
      - screen_number
      - seats_booked
      - start_time
      - theater
      - total_seats
      - updated_at
    ShowtimeDetailRequest:
      type: object
      description: Serializer for Showtime detail view
      properties:
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        seat_pricing:
          description: Pricing for different seat categories
        total_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total number of seats available for this showtime
        available_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Number of seats currently available
        booked_seats:
          description: List of booked seat identifiers
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
      required:
      - available_seats
      - base_price
      - end_time
      - screen_number
      - start_time
      - total_seats
    ShowtimeList:
      type: object
      description: Serializer for Showtime list view
      properties:
        id:
          type: integer
          readOnly: true
        screen_number:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Screen number within the theater
        start_time:
          type: string
          format: date-time
          description: Showtime start date and time
        end_time:
          type: string
          format: date-time
          description: Showtime end date and time
        base_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
          description: Base ticket price for this showtime
        total_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Total number of seats available for this showtime
        available_seats:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Number of seats currently available
        seats_booked:
          type: string
          readOnly: true
        occupancy_percentage:
          type: string
          readOnly: true
        is_sold_out:
          type: string
          readOnly: true
        is_upcoming:
          type: string
          readOnly: true
        is_active:
          type: boolean
          description: Whether this showtime is available for booking
        movie_title:
          type: string
          readOnly: true
        movie_duration:
          type: string
          readOnly: true
        movie_rating:
          type: string
          readOnly: true
        theater_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - available_seats
      - base_price
      - created_at
      - end_time
      - id
      - is_sold_out
      - is_upcoming
      - movie_duration
      - movie_rating
      - movie_title
      - occupancy_percentage
      - screen_number
      - seats_booked
      - start_time
      - theater_name
      - total_seats
      - updated_at
    TheaterCreateUpdate:
      type: object
      description: Serializer for Theater creation and updates
      properties:
        name:
          type: string
          description: Theater name
          maxLength: 200
        address:
          type: string
          description: Full theater address
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        seating_layout:
          description: Seating configuration for each screen
        amenities:
          description: List of theater amenities
        is_active:
          type: boolean
          description: Whether the theater is active and operational
      required:
      - address
      - city
      - name
      - state
      - zip_code
    TheaterCreateUpdateRequest:
      type: object
      description: Serializer for Theater creation and updates
      properties:
        name:
          type: string
          minLength: 1
          description: Theater name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full theater address
        city:
          type: string
          minLength: 1
          description: City
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          minLength: 1
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        seating_layout:
          description: Seating configuration for each screen
        amenities:
          description: List of theater amenities
        is_active:
          type: boolean
          description: Whether the theater is active and operational
      required:
      - address
      - city
      - name
      - state
      - zip_code
    TheaterDetail:
      type: object
      description: Serializer for Theater detail view (full data)
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Theater name
          maxLength: 200
        address:
          type: string
          description: Full theater address
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        seating_layout:
          description: Seating configuration for each screen
        amenities:
          description: List of theater amenities
        is_active:
          type: boolean
          description: Whether the theater is active and operational
        owner_name:
          type: string
          readOnly: true
        owner_username:
          type: string
          readOnly: true
        total_seats:
          type: string
          readOnly: true
        upcoming_showtimes:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - city
      - created_at
      - id
      - name
      - owner_name
      - owner_username
      - state
      - total_seats
      - upcoming_showtimes
      - updated_at
      - zip_code
    TheaterDetailRequest:
      type: object
      description: Serializer for Theater detail view (full data)
      properties:
        name:
          type: string
          minLength: 1
          description: Theater name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full theater address
        city:
          type: string
          minLength: 1
          description: City
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          minLength: 1
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        seating_layout:
          description: Seating configuration for each screen
        amenities:
          description: List of theater amenities
        is_active:
          type: boolean
          description: Whether the theater is active and operational
      required:
      - address
      - city
      - name
      - state
      - zip_code
    TheaterList:
      type: object
      description: Serializer for Theater list view (minimal data)
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Theater name
          maxLength: 200
        address:
          type: string
          description: Full theater address
        city:
          type: string
          description: City
          maxLength: 100
        state:
          type: string
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        is_active:
          type: boolean
          description: Whether the theater is active and operational
        owner_name:
          type: string
          readOnly: true
        owner_username:
          type: string
          readOnly: true
        total_seats:
          type: string
          readOnly: true
        active_showtimes_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_showtimes_count
      - address
      - city
      - created_at
      - id
      - name
      - owner_name
      - owner_username
      - state
      - total_seats
      - updated_at
      - zip_code
    TheaterListRequest:
      type: object
      description: Serializer for Theater list view (minimal data)
      properties:
        name:
          type: string
          minLength: 1
          description: Theater name
          maxLength: 200
        address:
          type: string
          minLength: 1
          description: Full theater address
        city:
          type: string
          minLength: 1
          description: City
          maxLength: 100
        state:
          type: string
          minLength: 1
          description: State/Province
          maxLength: 100
        zip_code:
          type: string
          minLength: 1
          description: ZIP/Postal code
          maxLength: 20
        phone_number:
          type: string
          description: Contact phone number
          maxLength: 20
        screens:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Number of screens in the theater
        is_active:
          type: boolean
          description: Whether the theater is active and operational
      required:
      - address
      - city
      - name
      - state
      - zip_code
    Ticket:
      type: object
      description: Serializer for Ticket model
      properties:
        id:
          type: integer
          readOnly: true
        ticket_number:
          type: string
          readOnly: true
        seat_number:
          type: string
          nullable: true
          maxLength: 10
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        status:
          enum:
          - valid
          - used
          - cancelled
          - expired
          type: string
          description: |-
            * `valid` - Valid
            * `used` - Used
            * `cancelled` - Cancelled
            * `expired` - Expired
          x-spec-enum-id: e21b560cdf11c08f
        used_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        used_by:
          type: string
          readOnly: true
        event_or_movie_title:
          type: string
          readOnly: true
        venue_info:
          type: string
          readOnly: true
        is_valid_for_use:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - event_or_movie_title
      - id
      - is_valid_for_use
      - price
      - ticket_number
      - updated_at
      - used_at
      - used_by
      - venue_info
    TicketType:
      type: object
      description: Serializer for TicketType model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Ticket type name (e.g., VIP, General, Student)
          maxLength: 100
        description:
          type: string
          description: Detailed description of what this ticket type includes
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Ticket price
        quantity_available:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Total number of tickets available for this type
        quantity_sold:
          type: integer
          readOnly: true
          description: Number of tickets sold for this type
        is_active:
          type: boolean
          description: Whether this ticket type is available for purchase
        sale_start_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales start (optional)
        sale_end_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales end (optional)
        tickets_remaining:
          type: string
          readOnly: true
        is_sold_out:
          type: string
          readOnly: true
        is_on_sale:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - is_on_sale
      - is_sold_out
      - name
      - price
      - quantity_available
      - quantity_sold
      - tickets_remaining
      - updated_at
    TicketTypeRequest:
      type: object
      description: Serializer for TicketType model
      properties:
        name:
          type: string
          minLength: 1
          description: Ticket type name (e.g., VIP, General, Student)
          maxLength: 100
        description:
          type: string
          description: Detailed description of what this ticket type includes
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Ticket price
        quantity_available:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
          description: Total number of tickets available for this type
        is_active:
          type: boolean
          description: Whether this ticket type is available for purchase
        sale_start_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales start (optional)
        sale_end_datetime:
          type: string
          format: date-time
          nullable: true
          description: When ticket sales end (optional)
      required:
      - name
      - price
      - quantity_available
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      description: |-
        Serializer for User model with profile information.

        Provides complete user information including basic account details
        and extended profile information with preferences.
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique user identifier
        username:
          type: string
          description: Unique username for the account
        email:
          type: string
          format: email
          description: User's email address
        first_name:
          type: string
          description: User's first name
        last_name:
          type: string
          description: User's last name
        date_joined:
          type: string
          format: date-time
          readOnly: true
          description: Date and time when the user joined
        profile:
          allOf:
          - $ref: '#/components/schemas/UserProfile'
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - id
      - last_name
      - profile
      - username
    UserProfile:
      type: object
      description: |-
        Serializer for UserProfile model.

        Handles user profile information including role, contact details,
        and user preferences for notifications and accessibility.
      properties:
        role:
          type: string
          description: User role (customer, event_owner, theater_owner, admin)
        phone_number:
          type: string
          description: User's phone number in international format (e.g., +1234567890)
        preferences:
          description: User preferences including notifications, favorites, and accessibility
            needs
        is_verified:
          type: boolean
          readOnly: true
          description: Whether the user's account has been verified
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - is_verified
      - phone_number
      - preferences
      - role
      - updated_at
    WaitlistEntry:
      type: object
      description: Serializer for waitlist entries
      properties:
        id:
          type: integer
          readOnly: true
        customer_name:
          type: string
          readOnly: true
        customer_email:
          type: string
          readOnly: true
        ticket_type_name:
          type: string
          maxLength: 100
        quantity_requested:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        max_price_willing_to_pay:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        notification_sent:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - customer_email
      - customer_name
      - expires_at
      - id
      - notification_sent
    WaitlistEntryRequest:
      type: object
      description: Serializer for waitlist entries
      properties:
        ticket_type_name:
          type: string
          maxLength: 100
        quantity_requested:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        max_price_willing_to_pay:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        expires_at:
          type: string
          format: date-time
      required:
      - expires_at
    PaginatedResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total number of items
        next:
          type: string
          nullable: true
          description: URL to next page
        previous:
          type: string
          nullable: true
          description: URL to previous page
        results:
          type: array
          items: {}
          description: Array of results for current page
      required:
      - count
      - results
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Operation success status
        message:
          type: string
          description: Success message
        data:
          type: object
          description: Response data
      required:
      - success
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/auth/login/ endpoint
    sessionAuth:
      type: apiKey
      in: cookie
      name: sessionid
      description: Django session authentication
servers:
- url: http://localhost:8000
  description: Development server
- url: https://api.moviebooking.com
  description: Production server
tags:
- name: Authentication
  description: User authentication and authorization endpoints
- name: Events
  description: Event management and discovery endpoints
- name: Theaters
  description: Theater and movie management endpoints
- name: Bookings
  description: Booking creation and management endpoints
- name: Notifications
  description: Notification preferences and management endpoints
- name: Analytics
  description: Analytics and reporting endpoints
- name: Admin
  description: Administrative endpoints for system management
externalDocs:
  description: API Integration Guide
  url: https://docs.moviebooking.com/integration/
security:
- jwtAuth: []
- sessionAuth: []
